{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n});\n\n// Add token to requests\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle auth errors\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const login = credentials => API.post('/auth/login', credentials);\nexport const getProfile = () => API.get('/auth/profile');\n\n// Agents API\nexport const getAgents = () => API.get('/agents');\nexport const createAgent = agentData => API.post('/agents', agentData);\nexport const deleteAgent = id => API.delete(`/agents/${id}`);\n\n// Lists API\nexport const getLists = () => API.get('/lists');\nexport const uploadList = formData => API.post('/lists', formData, {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n});\nexport const getListById = id => API.get(`/lists/${id}`);\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","login","credentials","post","getProfile","get","getAgents","createAgent","agentData","deleteAgent","id","delete","getLists","uploadList","formData","getListById"],"sources":["C:/Users/Shaswata  Panda/mern-app/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n});\r\n\r\n// Add token to requests\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle auth errors\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const login = (credentials) => API.post('/auth/login', credentials);\r\nexport const getProfile = () => API.get('/auth/profile');\r\n\r\n// Agents API\r\nexport const getAgents = () => API.get('/agents');\r\nexport const createAgent = (agentData) => API.post('/agents', agentData);\r\nexport const deleteAgent = (id) => API.delete(`/agents/${id}`);\r\n\r\n// Lists API\r\nexport const getLists = () => API.get('/lists');\r\nexport const uploadList = (formData) => API.post('/lists', formData, {\r\n  headers: { 'Content-Type': 'multipart/form-data' }\r\n});\r\nexport const getListById = (id) => API.get(`/lists/${id}`);\r\n\r\nexport default API;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;AAC5C,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAT,GAAG,CAACM,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMS,KAAK,GAAIC,WAAW,IAAK1B,GAAG,CAAC2B,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;AAC1E,OAAO,MAAME,UAAU,GAAGA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,eAAe,CAAC;;AAExD;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM9B,GAAG,CAAC6B,GAAG,CAAC,SAAS,CAAC;AACjD,OAAO,MAAME,WAAW,GAAIC,SAAS,IAAKhC,GAAG,CAAC2B,IAAI,CAAC,SAAS,EAAEK,SAAS,CAAC;AACxE,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAKlC,GAAG,CAACmC,MAAM,CAAC,WAAWD,EAAE,EAAE,CAAC;;AAE9D;AACA,OAAO,MAAME,QAAQ,GAAGA,CAAA,KAAMpC,GAAG,CAAC6B,GAAG,CAAC,QAAQ,CAAC;AAC/C,OAAO,MAAMQ,UAAU,GAAIC,QAAQ,IAAKtC,GAAG,CAAC2B,IAAI,CAAC,QAAQ,EAAEW,QAAQ,EAAE;EACnEzB,OAAO,EAAE;IAAE,cAAc,EAAE;EAAsB;AACnD,CAAC,CAAC;AACF,OAAO,MAAM0B,WAAW,GAAIL,EAAE,IAAKlC,GAAG,CAAC6B,GAAG,CAAC,UAAUK,EAAE,EAAE,CAAC;AAE1D,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}